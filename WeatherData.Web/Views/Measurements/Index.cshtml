
@model X.PagedList.IPagedList<WeatherData.Web.Models.DayAverage>


@{
    ViewBag.Title = "Index";
}

@if (Model.Count() < 1)
{
    <div class="measurements">
        <img src="~/assets/svg/no-db.svg" class="no-db-svg" />
        <div class="no-db-text">
            <h2>Empty or no database found..</h2>
            <p class="hint">Hint: Import some data by pressing "Import Data" in the menu.</p>
        </div>
    </div>
}
else
{
    <div class="measurements">
        <div class="table-container">
            <table class="table">
                <thead class="table-heading">
                    <tr>
                        <th>
                            @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParam })
                        </th>
                        <th>
                            @Html.ActionLink("Inner Temp (°C)", "Index", new { sortOrder = ViewBag.InnerTempParam })
                        </th>
                        <th>
                            @Html.ActionLink("Inner Humidity (%)", "Index", new { sortOrder = ViewBag.InnerHumidParam })
                        </th>
                        <th>
                            @Html.ActionLink("Inner Mould Index", "Index", new { sortOrder = ViewBag.InnerMouldParam })
                        </th>
                        <th>
                            @Html.ActionLink("Outer Temp (°C)", "Index", new { sortOrder = ViewBag.OuterTempParam })
                        </th>
                        <th>
                            @Html.ActionLink("Outer Humidity (%)", "Index", new { sortOrder = ViewBag.OuterHumidParam })
                        </th>
                        <th>
                            @Html.ActionLink("Outer Mould Index", "Index", new { sortOrder = ViewBag.OuterMouldParam })
                        </th>
                        <th>
                            @Html.ActionLink("Door open (min)", "Index", new { sortOrder = ViewBag.OpenDoorParam })
                        </th>
                        <th />
                        <th />
                    </tr>
                </thead>
                <tbody>
                  @foreach (var item in Model)
                  {
                    <tr class="@(item.Date == ViewBag.FallStart.Date ? "fall-start" : "")@(item.Date == ViewBag.WinterStart.Date ? "winter-start" : "")">
                      <td>
                        @Html.ValueFor(modelItem => item.Date, "{0:yyyy-MM-dd}")
                      </td>
                      <td>
                        @Html.DisplayFor(modelItem => item.InsideTemperatureAverage)
                      </td>
                      <td>
                        @Html.DisplayFor(modelItem => item.InsideHumidityAverage)
                      </td>
                      <td>
                        @Html.DisplayFor(modelItem => item.InsideMouldIndex)
                      </td>
                      <td>
                        @Html.DisplayFor(modelItem => item.OutsideTemperatureAverage)
                      </td>
                      <td>
                        @Html.DisplayFor(modelItem => item.OutsideHumidityAverage)
                      </td>
                      <td>
                        @Html.DisplayFor(modelItem => item.OutsideMouldIndex)
                      </td>
                      <td>
                        @Html.DisplayFor(modelItem => item.MinutesDoorOpen)
                      </td>
                      @if (item.Date == ViewBag.FallStart.Date)
                      {
                        <td><i class="fab fa-canadian-maple-leaf"></i> Fall Start</td>
                      }
                      else if (item.Date == ViewBag.WinterStart.Date)
                      {
                        <td><i class="fas fa-snowflake"></i> Winter Start</td>
                      }
                      else
                      {
                        <td />
                      }
                      <td class="table-link">
                        <a asp-action="Details" asp-route-id="@item.Date"></a>
                      </td>
                    </tr>
                  }
                </tbody>
            </table>
        </div>
        @X.PagedList.Mvc.Core.HtmlHelper.PagedListPager(Html, Model, page => Url.Action("Index", new { page }))


        <br />
        <div class="stats">
            <div class="charts">
                <div class="chart-header"></div>
                <div id="chartContainer" style="height: 300px; width: 100%;">
                </div>
            </div>
            <div class="stats-summary">
                <div class="stats-summary-header"><span>Min / Max stats</span></div>
                <div class="stats-count">
                    <ul>
                        <li><i class="fas fa-registered"></i></li>
                        <li><i class="fas fa-calendar-day"></i></li>
                        <li><i class="fas fa-snowflake"></i></li>
                        <li><i class="fas fa-fire"></i></li>
                        <li><i class="fas fa-snowflake"></i></li>
                        <li><i class="fas fa-fire"></i></li>
                        <li><i class="fas fa-wind"></i></li>
                        <li><i class="fas fa-tint"></i></li>
                        <li><i class="fas fa-wind"></i></li>
                        <li><i class="fas fa-tint"></i></li>
                    </ul>
                    <ul>
                        <li>Readings: @ViewBag.Readings</li>
                        <li>Days Active: @ViewBag.Days</li>
                        <li>Outdoor: @ViewBag.HighsAndLows.LowestOutdoorTemp</li>
                        <li>Outdoor: @ViewBag.HighsAndLows.HighestOutdoorTemp</li>
                        <li>Indoor: @ViewBag.HighsAndLows.LowestIndoorTemp</li>
                        <li>Indoor: @ViewBag.HighsAndLows.HighestIndoorTemp</li>
                        <li>Indoor: @ViewBag.HighsAndLows.LowestIndoorHumidity %</li>
                        <li>Indoor: @ViewBag.HighsAndLows.HighestIndoorHumidity %</li>
                        <li>Outdoor: @ViewBag.HighsAndLows.LowestOutdoorHumidity %</li>
                        <li>Outdoor: @ViewBag.HighsAndLows.HighestOutdoorHumidity %</li>
                    </ul>
                </div>
            </div>
        </div>

        <script src="~/lib/jquery/dist/jquery.min.js"></script>
        <script>
            $('tr').click(function () {
              window.location = $(this).find('a').attr('href');
            }).hover(function () {
              $(this).toggleClass('hover');
            });

            // Load Chart when page loads
            window.onload = function () {

            var chart = new CanvasJS.Chart("chartContainer", {
	            theme: "light1",
	            axisY: {
                  suffix: "°C"
	            },
	            toolTip: {
		            shared: true
	            },
	            data: [{
		            type: "area",
		            name: "Indoor Temp",
		            markerSize: 0,
		            xValueType: "dateTime",
                    xValueFormatString: "MMM YYYY DD",
                    yValueFormatString: "0.#°C",
		            dataPoints: @Html.Raw(ViewBag.IndoorAvgs)
	            },
	            {
		            type: "area",
		            name: "Outdoor Temp",
		            markerSize: 0,
		            xValueType: "dateTime",
                    xValueFormatString: "MMM YYYY DD",
                  yValueFormatString: "0.#°C",
		            dataPoints: @Html.Raw(ViewBag.OutdoorAvgs)
	            }
	            ]
            });
            //print Chart
            chart.render();

            }
        </script>
        <br />
    </div>
}



